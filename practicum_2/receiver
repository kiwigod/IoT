#!/usr/bin/node
'use strict';

var Client = require('azure-iothub').Client;
var Message = require('azure-iot-device').Message;

// az iot hub show-connection-string --hub-name {YourIoTHubName} --output table
var connectionString = 'HostName=gmdelftiotpracticum.azure-devices.net;SharedAccessKeyName=service;SharedAccessKey=TIJxaNj/GJkVuJavJDv5RcH9bEbWye0jDURSp3yVp3w=';

var { EventHubClient, EventPosition } = require('@azure/event-hubs');

var printError = function (err) {
    console.log(err.message);
};

var alarm = Client.fromConnectionString(connectionString);
var sensor_1 = 'sensor_studentB_5_1';
var sensor_2 = 'sensor_studentB_5_2';
var alarm_device = 'alarm_studentB_5';
var light_device = 'light_studentB_5';

var motionAlert_1 = false;
var motionAlert_2 = false;

var printMessage = function (message) {
    var device = message.body.deviceId;

    if (device === sensor_1) {
        console.log(device + ': ' + message.applicationProperties.motionAlert)
        if (!motionAlert_1 && Boolean(message.applicationProperties.motionAlert))
            motionAlert_1 = true;
    }

    else if (device === sensor_2) {
        console.log(device + ': ' + message.applicationProperties.motionAlert)
        if (!motionAlert_2 && Boolean(message.applicationProperties.motionAlert))
            motionAlert_2 = true;
    }

    else if (device === alarm_device || device === light_device) {
        motionAlert_1 = message.body.alarm;
        motionAlert_2 = message.body.alarm;
        // if (!message.body.alarm) {
        //     motionAlert_1 = false;
        //     motionAlert_2 = false;
        // }
    }

    // else if (device === 'device-studentB-4-device-1') {
    //     if (!motionAlert_1 && message.body.motionDetected)
    //         motionAlert_1 = true;
    // }

    // else if (device === 'device-studentB-4-device-2') {
    //     if (!motionAlert_2 && message.body.motionDetected)
    //         motionAlert_2 = true;
    // }
};

// Connect to the partitions on the IoT Hub's Event Hubs-compatible endpoint.
var ehClient;
EventHubClient.createFromIotHubConnectionString(connectionString).then(function (client) {
    console.log("Successully created the EventHub Client from iothub connection string.");
    ehClient = client;
    return ehClient.getPartitionIds();
}).then(function (ids) {
    console.log("The partition ids are: ", ids);
    return ids.map(function (id) {
        return ehClient.receive(id, printMessage, printError, { eventPosition: EventPosition.fromEnqueuedTime(Date.now()) });
    });
}).catch(printError);

setInterval(() => {
    if (motionAlert_1 && motionAlert_2) {
        alarm.open((err) => {
            if (err)
                console.error('Could not connect: ' + err.message);
            else {
                var data = {deviceId: alarm_device, alarm: true};
                var message = new Message(JSON.stringify(data));
                alarm.send('device-studentB-5-device-3', message);
                data.deviceId = light_device;
                message = new Message(JSON.stringify(data));
                alarm.send('device-studentB-5-device-4', message);
            }
        });
    }
    else console.log('Alarm niet afgegaan');
}, 5000);

